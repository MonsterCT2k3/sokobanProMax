package com.example.myapplication

import android.os.Bundle
import android.widget.Button
import androidx.appcompat.app.AlertDialog
import androidx.appcompat.app.AppCompatActivity
import com.example.myapplication.managers.MusicManager

class GameButtonActivity : AppCompatActivity() {

    private lateinit var gameView: GameView
    private lateinit var musicManager: MusicManager
    private var isNavigatingToVictory = false

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)


        musicManager = MusicManager.getInstance(this)
        musicManager.resumeMusic()
        // L·∫•y tham chi·∫øu ƒë·∫øn GameView
        gameView = findViewById(R.id.gameView)

        // Set background image
        gameView.setBackgroundImage(
            R.drawable.bg2, // Th·ª≠ v·ªõi ·∫£nh forest
            com.example.myapplication.rendering.BackgroundManager.BackgroundScrollType.PARALLAX_HORIZONTAL
        )

        // L·∫•y level ID t·ª´ intent v√† load level
        val levelId = intent.getIntExtra("LEVEL_ID", 1)
        gameView.loadLevel(levelId)

        // Setup callback t·ª´ GameView ƒë·ªÉ x·ª≠ l√Ω navigation
        gameView.setVictoryNavigationCallback {
            isNavigatingToVictory = true
        }

        
        // N√∫t quay l·∫°i Level Selection
        findViewById<Button>(R.id.buttonBack).setOnClickListener {
            showExitGameDialog()
        }
        
        // N√∫t Reset level
        findViewById<Button>(R.id.buttonReset).setOnClickListener {
            // üÜï L·∫•y level hi·ªán t·∫°i t·ª´ game thay v√¨ t·ª´ intent
            val currentLevelId = gameView.getCurrentLevelId()
            gameView.loadLevel(currentLevelId) // Reset level hi·ªán t·∫°i v·ªÅ tr·∫°ng th√°i ban ƒë·∫ßu
        }
    }



    override fun onResume() {
        super.onResume()
        // Reset navigation flag
        isNavigatingToVictory = false
        if (::gameView.isInitialized) {
            gameView.resumeGame()
        }
        musicManager.resumeMusic()
    }

    override fun onPause() {
        super.onPause()
        if (::gameView.isInitialized) {
            gameView.pauseGame()
        }
        // Ch·ªâ t·∫°m d·ª´ng nh·∫°c khi kh√¥ng chuy·ªÉn sang VictoryActivity
        if (!isNavigatingToVictory) {
            musicManager.pauseMusic()
        }
    }

    override fun onDestroy() {
        super.onDestroy()
        if (::gameView.isInitialized) {
            gameView.stopGame()
        }
    }

    private fun showExitGameDialog() {
        AlertDialog.Builder(this)
            .setTitle("Tho√°t Game")
            .setMessage("B·∫°n c√≥ ch·∫Øc mu·ªën tho√°t game? Ti·∫øn ƒë·ªô hi·ªán t·∫°i s·∫Ω kh√¥ng ƒë∆∞·ª£c l∆∞u.")
            .setPositiveButton("Tho√°t") { _, _ ->
                finish() // Quay l·∫°i LevelSelectionActivity
            }
            .setNegativeButton("Ti·∫øp t·ª•c") { dialog, _ ->
                dialog.dismiss() // ƒê√≥ng dialog, ti·∫øp t·ª•c ch∆°i
            }
            .setCancelable(true)
            .show()
    }

    override fun onBackPressed() {
        super.onBackPressed()
        // Khi nh·∫•n n√∫t back c·ªßa h·ªá th·ªëng c≈©ng hi·ªán dialog
        showExitGameDialog()
    }
} 