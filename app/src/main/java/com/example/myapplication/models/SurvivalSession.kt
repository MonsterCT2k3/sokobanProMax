package com.example.myapplication.models

/**
 * üèÉ SurvivalSession - Qu·∫£n l√Ω tr·∫°ng th√°i c·ªßa m·ªôt phi√™n Survival Mode
 * 
 * L∆∞u tr·ªØ t·∫•t c·∫£ th√¥ng tin c·∫ßn thi·∫øt cho m·ªôt phi√™n ch∆°i Survival:
 * - Levels c·∫ßn ch∆°i (1, 3, 4)
 * - Tr·∫°ng th√°i hi·ªán t·∫°i (level n√†o, c√≤n bao nhi√™u m·∫°ng)
 * - Th·ªùi gian ch∆°i t·ªïng c·ªông
 * - S·ªë ƒë·∫°n c√°c lo·∫°i
 */
data class SurvivalSession(
    val sessionId: String,
    val levels: List<Int> = listOf(1, 3, 4),  // Fixed levels for Survival mode
    var currentLevelIndex: Int = 0,
    var lives: Int = 3,
    var totalTimeMs: Long = 0L,
    val sessionStartTime: Long = System.currentTimeMillis(),
    var normalAmmo: Int = 0,
    var pierceAmmo: Int = 0,
    var stunAmmo: Int = 3,
    var isCompleted: Boolean = false,
    var isFailed: Boolean = false,
    val completedLevels: MutableList<Int> = mutableListOf()
) {
    /**
     * Get current level ID
     */
    val currentLevelId: Int
        get() = if (currentLevelIndex < levels.size) levels[currentLevelIndex] else -1

    /**
     * Check if this is the last level
     */
    val isLastLevel: Boolean
        get() = currentLevelIndex >= levels.size - 1

    /**
     * Get total number of levels
     */
    val totalLevels: Int
        get() = levels.size
}